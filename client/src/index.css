@import url('https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 170 50% 4%;
    --foreground: 160 15% 95%;
    
    --card: 180 30% 7%;
    --card-foreground: 160 15% 95%;
    
    --popover: 180 30% 7%;
    --popover-foreground: 160 15% 95%;
    
    --primary: 150 100% 50%;
    --primary-foreground: 180 30% 7%;
    
    --secondary: 170 50% 10%;
    --secondary-foreground: 160 15% 95%;
    
    --muted: 180 20% 40%;
    --muted-foreground: 160 10% 80%;
    
    --accent: 210 100% 60%;
    --accent-foreground: 160 15% 95%;
    
    --destructive: 0 100% 62%;
    --destructive-foreground: 160 15% 95%;
    
    --border: 170 50% 15%;
    --input: 170 50% 15%;
    --ring: 150 100% 50%;
    
    --sidebar-background: 180 30% 5%;
    --sidebar-foreground: 160 10% 80%;
    --sidebar-primary: 150 100% 50%;
    --sidebar-primary-foreground: 180 30% 7%;
    --sidebar-accent: 210 100% 60%;
    --sidebar-accent-foreground: 160 15% 95%;
    --sidebar-border: 170 50% 15%;
    --sidebar-ring: 150 100% 50%;
    
    --radius: 0rem;
  }
  
  * {
    @apply border-border;
  }
  
  body {
    @apply font-mono antialiased bg-background text-foreground;
    overflow-x: hidden;
    scrollbar-width: none;
    -ms-overflow-style: none;
    background-image: 
      radial-gradient(circle at 20% 30%, hsla(var(--primary) / 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, hsla(var(--accent) / 0.1) 0%, transparent 50%);
  }
  
  body::-webkit-scrollbar {
    display: none;
  }
}

@layer components {
  .font-stratum {
    font-family: 'Stratum2', sans-serif;
  }
  
  .font-rajdhani {
    font-family: 'Rajdhani', sans-serif;
  }
  
  .font-roboto {
    font-family: 'Roboto Condensed', sans-serif;
  }
  
  .font-mono {
    font-family: 'Share Tech Mono', monospace;
  }
  
  .clip-diagonal {
    clip-path: polygon(0 0, 100% 0, 95% 100%, 0 100%);
  }
  
  .clip-diagonal-reverse {
    clip-path: polygon(5% 0, 100% 0, 100% 100%, 0 100%);
  }
  
  .diagonal-line {
    position: relative;
  }
  
  .diagonal-line::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      135deg,
      hsla(var(--primary) / 0.05),
      hsla(var(--primary) / 0.05) 1px,
      transparent 1px,
      transparent 10px
    );
    pointer-events: none;
  }
  
  /* Terminal UI elements */
  .terminal-line {
    position: relative;
    padding-left: 1.5rem;
  }
  
  .terminal-line::before {
    content: '>';
    position: absolute;
    left: 0;
    color: hsl(var(--primary));
  }
  
  .scanline {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(to bottom, 
      transparent 0%,
      hsla(var(--primary) / 0.2) 50%,
      transparent 100%);
    animation: scanline 8s linear infinite;
    pointer-events: none;
    z-index: 9999;
  }
  
  .bg-scanline {
    background: linear-gradient(
      to bottom,
      hsla(var(--primary) / 0.03) 50%,
      transparent 50%
    );
    background-size: 100% 4px;
    position: relative;
  }
  
  /* Grid patterns */
  .tactical-grid {
    background-color: hsla(var(--background));
    background-image: 
      linear-gradient(hsla(var(--primary) / 0.03) 1px, transparent 1px),
      linear-gradient(90deg, hsla(var(--primary) / 0.03) 1px, transparent 1px);
    background-size: 20px 20px;
    background-position: 0 0, 0 0;
  }
}

@layer utilities {
  .text-glitch:hover {
    animation: glitch 0.3s cubic-bezier(.25, .46, .45, .94) both;
    text-shadow: 1px 1px 5px hsla(var(--primary) / 0.7);
  }
  
  .neon-flicker {
    animation: flicker 8s infinite;
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-pulse-slow {
    animation: pulse 3s infinite;
  }
  
  .terminal-typing::after {
    content: '|';
    animation: blink 1s step-end infinite;
  }
  
  .active-command {
    background: hsla(var(--primary) / 0.1);
    border-left: 2px solid hsl(var(--primary));
    box-shadow: 0 0 8px hsla(var(--primary) / 0.2);
  }
  
  .hexagon-button {
    position: relative;
    overflow: hidden;
    transition: all 0.3s;
    z-index: 1;
  }
  
  .hexagon-button:after {
    content: "";
    position: absolute;
    inset: 0;
    background-color: hsl(var(--primary));
    opacity: 0;
    transition: opacity 0.3s;
    z-index: -1;
  }
  
  .hexagon-button:hover:after {
    opacity: 0.1;
  }
  
  .glitch-text {
    position: relative;
    display: inline-block;
  }
  
  .glitch-text:hover::before,
  .glitch-text:hover::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.8;
  }
  
  .glitch-text:hover::before {
    left: 2px;
    text-shadow: -1px 0 hsla(var(--primary) / 0.7);
    animation: noise-anim-1 3s infinite linear alternate-reverse;
    clip: rect(44px, 9999px, 56px, 0);
  }
  
  .glitch-text:hover::after {
    left: -2px;
    text-shadow: 1px 0 hsla(var(--accent) / 0.7);
    animation: noise-anim-2 2s infinite linear alternate-reverse;
    clip: rect(44px, 9999px, 66px, 0);
  }
  
  .hover-glow:hover {
    text-shadow: 0 0 10px hsla(var(--primary) / 0.7),
                 0 0 20px hsla(var(--primary) / 0.5),
                 0 0 30px hsla(var(--primary) / 0.3);
  }
  
  .terminal-frame {
    position: relative;
    box-shadow: 0 0 15px hsla(var(--primary) / 0.1);
  }
  
  .hex-pattern {
    background-image: repeating-linear-gradient(
      120deg,
      hsla(var(--primary) / 0.03),
      hsla(var(--primary) / 0.03) 1px,
      transparent 1px,
      transparent 60px
    ),
    repeating-linear-gradient(
      60deg,
      hsla(var(--primary) / 0.03),
      hsla(var(--primary) / 0.03) 1px,
      transparent 1px,
      transparent 60px
    );
    background-size: 70px 120px;
  }
  
  .grid-lines {
    background-image: 
      linear-gradient(to right, hsla(var(--primary) / 0.05) 1px, transparent 1px),
      linear-gradient(to bottom, hsla(var(--primary) / 0.05) 1px, transparent 1px);
    background-size: 20px 20px;
  }
}

@keyframes glitch {
  0% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
  100% { transform: translate(0); }
}

@keyframes flicker {
  0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% { opacity: 1; }
  20%, 24%, 55% { opacity: 0.8; }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

@keyframes progress {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes scanline {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100vh);
  }
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

@keyframes noise-anim-1 {
  0% { clip: rect(64px, 9999px, 27px, 0); }
  5% { clip: rect(18px, 9999px, 93px, 0); }
  10% { clip: rect(32px, 9999px, 14px, 0); }
  15% { clip: rect(20px, 9999px, 31px, 0); }
  20% { clip: rect(45px, 9999px, 65px, 0); }
  25% { clip: rect(22px, 9999px, 42px, 0); }
  30% { clip: rect(32px, 9999px, 2px, 0); }
  35% { clip: rect(60px, 9999px, 32px, 0); }
  40% { clip: rect(94px, 9999px, 96px, 0); }
  45% { clip: rect(10px, 9999px, 65px, 0); }
  50% { clip: rect(31px, 9999px, 62px, 0); }
  55% { clip: rect(94px, 9999px, 98px, 0); }
  60% { clip: rect(1px, 9999px, 23px, 0); }
  65% { clip: rect(63px, 9999px, 4px, 0); }
  70% { clip: rect(11px, 9999px, 33px, 0); }
  75% { clip: rect(93px, 9999px, 37px, 0); }
  80% { clip: rect(63px, 9999px, 42px, 0); }
  85% { clip: rect(5px, 9999px, 49px, 0); }
  90% { clip: rect(35px, 9999px, 90px, 0); }
  95% { clip: rect(48px, 9999px, 83px, 0); }
  100% { clip: rect(98px, 9999px, 54px, 0); }
}

@keyframes noise-anim-2 {
  0% { clip: rect(8px, 9999px, 30px, 0); }
  5% { clip: rect(85px, 9999px, 84px, 0); }
  10% { clip: rect(27px, 9999px, 23px, 0); }
  15% { clip: rect(23px, 9999px, 35px, 0); }
  20% { clip: rect(55px, 9999px, 35px, 0); }
  25% { clip: rect(12px, 9999px, 25px, 0); }
  30% { clip: rect(47px, 9999px, 8px, 0); }
  35% { clip: rect(36px, 9999px, 22px, 0); }
  40% { clip: rect(64px, 9999px, 52px, 0); }
  45% { clip: rect(30px, 9999px, 35px, 0); }
  50% { clip: rect(51px, 9999px, 12px, 0); }
  55% { clip: rect(24px, 9999px, 68px, 0); }
  60% { clip: rect(81px, 9999px, 23px, 0); }
  65% { clip: rect(43px, 9999px, 4px, 0); }
  70% { clip: rect(51px, 9999px, 13px, 0); }
  75% { clip: rect(53px, 9999px, 57px, 0); }
  80% { clip: rect(33px, 9999px, 22px, 0); }
  85% { clip: rect(35px, 9999px, 39px, 0); }
  90% { clip: rect(15px, 9999px, 60px, 0); }
  95% { clip: rect(18px, 9999px, 43px, 0); }
  100% { clip: rect(28px, 9999px, 14px, 0); }
}

@keyframes radar {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes borderPulse {
  0% {
    box-shadow: 0 0 0 0 hsla(var(--primary) / 0.4);
  }
  70% {
    box-shadow: 0 0 0 5px hsla(var(--primary) / 0);
  }
  100% {
    box-shadow: 0 0 0 0 hsla(var(--primary) / 0);
  }
}

/* Custom cursor styles */
* {
  cursor: none;
}

.cursor {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  position: fixed;
  pointer-events: none;
  z-index: 9999;
  mix-blend-mode: normal;
  transition: transform 0.2s ease;
}

.cursor-dot {
  width: 8px;
  height: 8px;
  background-color: hsl(var(--primary));
}

.cursor-outline {
  width: 24px;
  height: 24px;
  border: 2px solid hsl(var(--primary));
  transition: transform 0.3s ease, width 0.3s ease, height 0.3s ease;
}

.cursor-hover {
  transform: scale(1.5);
}

.stat-progress {
  animation: progress 1.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
}

.weapon-card:hover .weapon-image {
  transform: scale(1.1) translateY(-5px);
}

.weapon-card .weapon-image {
  transition: transform 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
}
